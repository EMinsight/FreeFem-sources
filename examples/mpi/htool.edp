load "htool"

mesh Th = square(80,80);

fespace Uh(Th,P1);

Uh<real> u,v,d;

HMatrix<real> A;
HMatrix H;

v = 1;

for (int i=0; i<5; i++) {
  mesh Th2 = movemesh(Th,[x+0.4*i,y]);
  fespace Uh2(Th2,P1);

  A = assemble(Uh,Uh2,eta=-1,minclustersize=20,maxblocksize=1000000);
  H = assemble(Uh,Uh2,eta=1e+0,epsilon=1e-3,minclustersize=20,maxblocksize=1000000);

  u[] = A*v[];
  d[] = H*v[];

  d[] -= u[];

  cout.fixed;

  if (mpirank == 0)
   cout << "A.build: " << A.infos["Blocks_max"]              << setw(4) << "\t"
        << "A.MV: "    << A.infos["total_time_mat_vec_prod"] << setw(4) << "\t"
        << "H.comp.: " << H.infos["Compression"]             << setw(4) << "\t"
        << "H.build: " << H.infos["Blocks_max"]              << setw(4) << "\t"
        << "H.MV: "    << H.infos["total_time_mat_vec_prod"] << setw(4) << "\t"
        << "err: "   << d[].l2/u[].l2                        << endl;

  plot(d,fill=1,value=1);
  display(H);
}

if (mpirank == 0)
  cout << H.infos << endl;

mpiBarrier(mpiCommWorld);
